// Add product to wishlist
exports.addProductToWishlist = async (req, res) => {
  try {
    const user = await User.findById(req.user.id);
    const product = await Product.findById(req.params.productId);

    if (user && product) {
      if (!user.wishlistProducts.includes(product.id)) {
        user.wishlistProducts.push(product.id);
        await user.save();
        res.status(200).json({ message: 'Product added to wishlist' });
      } else {
        res.status(400).json({ message: 'Product already in wishlist' });
      }
    } else {
      res.status(404).json({ message: 'User or Product not found' });
    }
  } catch (error) {
    console.error(error.message);
    res.status(500).json({ message: 'Server error' });
  }
};

// Remove product from wishlist
exports.removeProductFromWishlist = async (req, res) => {
  try {
    const user = await User.findById(req.user.id);
    const product = await Product.findById(req.params.productId);

    if (user && product) {
      user.wishlistProducts = user.wishlistProducts.filter(
        (prod) => prod.toString() !== product.id
      );
      await user.save();
      res.status(200).json({ message: 'Product removed from wishlist' });
    } else {
      res.status(404).json({ message: 'User or Product not found' });
    }
  } catch (error) {
    console.error(error.message);
    res.status(500).json({ message: 'Server error' });
  }
};

// Add service to wishlist
exports.addServiceToWishlist = async (req, res) => {
  try {
    const user = await User.findById(req.user.id);
    const service = await Service.findById(req.params.serviceId);

    if (user && service) {
      if (!user.wishlistServices.includes(service.id)) {
        user.wishlistServices.push(service.id);
        await user.save();
        res.status(200).json({ message: 'Service added to wishlist' });
      } else {
        res.status(400).json({ message: 'Service already in wishlist' });
      }
    } else {
      res.status(404).json({ message: 'User or Service not found' });
    }
  } catch (error) {
    console.error(error.message);
    res.status(500).json({ message: 'Server error' });
  }
};

// Remove service from wishlist
exports.removeServiceFromWishlist = async (req, res) => {
  try {
    const user = await User.findById(req.user.id);
    const service = await Service.findById(req.params.serviceId);

    if (user && service) {
      user.wishlistServices = user.wishlistServices.filter(
        (serv) => serv.toString() !== service.id
      );
      await user.save();
      res.status(200).json({ message: 'Service removed from wishlist' });
    } else {
      res.status(404).json({ message: 'User or Service not found' });
    }
  } catch (error) {
    console.error(error.message);
    res.status(500).json({ message: 'Server error' });
  }
};



Here are some additional features that can enhance the functionality and user experience of your African Marketplace platform:

### Enhanced User Features:
1. **Profile Customization:**
   - Allow users to add a bio and other personal details.
   - Enable users to select profile backgrounds or banners.

2. **User Activity Log:**
   - Include logs for login/logout activities.
   - Log updates to profile settings and changes.

3. **Enhanced Security:**
   - Two-factor authentication (2FA) for login.
   - Security questions for account recovery.

4. **Notification System:**
   - Email notifications for significant actions (e.g., order updates, new messages).
   - In-app notifications for real-time updates.

5. **Social Sharing:**
   - Allow users to share products and services on their social media profiles.
   - Integration with more social platforms like Instagram and LinkedIn.

6. **Wishlist and Favorites:**
   - Notifications for price drops on wishlisted items.
   - Share wishlist with friends and family.

### Business and Influencer Features:
1. **Advanced Business Analytics:**
   - Provide insights on visitor demographics and behavior.
   - Sales forecasting and trend analysis.

2. **Influencer Collaboration:**
   - Automated matching system for businesses to find relevant influencers.
   - Performance metrics for influencer campaigns.

3. **Enhanced Payment Options:**
   - Support for more payment gateways.
   - Option for installment payments or financing.

4. **Branding Tools for Businesses:**
   - Customizable storefront themes.
   - Business blogs to engage customers.

### Product and Service Features:
1. **Enhanced Product Listings:**
   - 360-degree product views.
   - Virtual try-on (for clothing and accessories).

2. **Service Booking:**
   - Schedule services directly from the platform.
   - Integrate calendar synchronization.

3. **Dynamic Pricing:**
   - Implement dynamic pricing based on demand and stock levels.
   - Flash sales and limited-time offers.

### Community and Interaction Features:
1. **Community Forums:**
   - Discussion boards for users to engage in various topics.
   - Q&A sections for product and service queries.

2. **User Reviews and Ratings:**
   - Verified purchase badge for reviews.
   - Upvote/downvote system for reviews and comments.

3. **User-Generated Content:**
   - Allow users to post their own content related to products/services.
   - Contests and challenges to boost engagement.

### Administrative Features:
1. **Content Moderation:**
   - AI-driven moderation for user-generated content.
   - Tools for reporting and handling disputes.

2. **Customizable Dashboards:**
   - Admin dashboards with real-time analytics.
   - Customizable widgets and reporting tools.

3. **Marketing and Promotion Tools:**
   - Automated email marketing campaigns.
   - Affiliate marketing program for users.

### Miscellaneous:
1. **Multi-language Support:**
   - Enable the platform to support multiple languages.
   - Localization for different regions.

2. **Accessibility Features:**
   - Ensure the platform is accessible to users with disabilities.
   - Voice commands and screen reader compatibility.

3. **Mobile App:**
   - Develop a dedicated mobile app for iOS and Android.
   - Push notifications for real-time updates.

By integrating these features, you can provide a comprehensive and engaging experience for your users, catering to their needs and preferences.